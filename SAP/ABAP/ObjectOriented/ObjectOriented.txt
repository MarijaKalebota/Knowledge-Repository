REPORT ObjectOriented.

INTERFACE interface.
  METHODS:
  interface_method.
  ENDINTERFACE.

CLASS parent DEFINITION.
*visibility modifiers: PUBLIC, PROTECTED, PRIVATE.
  PUBLIC SECTION.
  INTERFACES interface.
*instance methods are inherited and can be overridden(redifined)
*final methods are inherited and cannot be redefined
*static(class) methods are inherited and cannot be redefined
*moreover, they are shared by all objects and classes that inherit them
  METHODS: instance,
           FINAL FINAL.
  CLASS-METHODS: static.
  PROTECTED SECTION.
*define an instance and static attribute
  DATA instance_protected_data TYPE i VALUE 6.
  PRIVATE SECTION.
  CLASS-DATA static_private_data TYPE i VALUE 7.
  ENDCLASS.
*child inherits from parent
CLASS child DEFINITION INHERITING FROM parent.
  PUBLIC SECTION.
  METHODS: instance REDEFINITION.
  ENDCLASS.

CLASS parent IMPLEMENTATION.
  METHOD instance.
    WRITE / 'Parent instance'.
    ENDMETHOD.
  METHOD static.
    WRITE / 'Parent static'.
    ENDMETHOD.
  METHOD final.
    WRITE / 'Parent final'.
    ENDMETHOD.
  METHOD interface~interface_method.
    WRITE / 'Interface'.
    ENDMETHOD.

  ENDCLASS.

CLASS child IMPLEMENTATION.
  METHOD instance.
    WRITE / 'Child instance'.
    ENDMETHOD.
  ENDCLASS.

  START-OF-SELECTION.
*create a child object and store it in a parent reference
    DATA parent TYPE REF TO parent.
    CREATE OBJECT parent TYPE child.
*access instance  components with ->
*access static    components with =>
*access interface components with _interface~_component
    CALL METHOD parent->instance. "-> Child instance
    CALL METHOD parent=>static. "-> Parent static
    CALL METHOD child=>static. "-> Parent static
    CALL METHOD parent->final. "-> Parent final
    CALL METHOD parent->interface~interface_method. "-> Interface