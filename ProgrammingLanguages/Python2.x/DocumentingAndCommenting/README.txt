Commenting and documenting in Python
====================================

Programs should be commented and documented at the same time. Documentation should be generated from comments.

Docstrings
----------
To document Python code use docstrings. Docstrings are marked with triple quotes and can be declared just after function declaration. Docstrings are used to document functions, classes, methods and the package's __init__.py file.
Once a program has been documented with docstrings, it can be extracted and put into a .pdf or .html file. A package called "sphinx" can generate documentation from docstrings.

Setup Python sphinx
-------------------
Check whether sphinx was installed correctly by typing "sphinx-build".
A sphinx documentation folder is generated by positioning the command line in the project's top folder and typing "sphinx-quickstart". Consult the SphinxHandout.pdf and answer the questions.
Position the command line in the newly created folder and set sys.path.<some_path> to sys.path.insert(0, os.path.abspath('..')). This will tell sphinx where the documented programs are.

Generating sphinx documentation
-------------------------------
sphinx folder contains a conf.py file, _build folder and .rst files. In conf.py you can change where your project is located by adding a path to sys.path, documentation style by changing html_style and can change any quickstart question answers. _build folder stores all the generated documentation. .rst files are files that instructs sphinx how to generate the documentation.
To generate an .html file, position the command line where the conf.py is and type "make html". This will create a file in _build/html/index.html which you can view.
Generated sphinx documentation can always be erased by typing "make clean".

Writing sphinx documentation
----------------------------
Sphinx generates documentation by executing all <file_name>.rst files. RST stands for reStructuredText and it has its own syntax. The only .rst file in sphinx by default is index.rst. You can create more .rst files at will. To make .rst files generate documentation link them to index.rst.
Link other .rst files to index.rst by adding the name of the new .rst file to the index.rst.

RST and sphinx syntax
---------------------
SphinxHandout details both, but the most important part is letting autodocs generate the documentation from Python docstrings.

Demo source: 
https://github.com/brandon-rhodes/sphinx-tutorial

Video source:
https://www.youtube.com/watch?v=QNHM7q2hLh8

Short manual:
https://pythonhosted.org/an_example_pypi_project/sphinx.html